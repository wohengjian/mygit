系统用户
/etc/passwd 
系统使用uid来表示用户名 
使用git表示组名
uid=0  root 
uid从1到499都是系统用户，PAM模块会过滤500以内的uid用户
uid从500-65535，都是普通用户
root:x:0:0:root:/root:/bin/bash
用户名：密码：uid：gid：注释：家目录：shell环境

/etc/shadow   密码文件
用户名：密码（sha-256）：unix纪元时（1970-1-1）：最少使用天数：最多使用天数：密码到期前的警告天数：不活跃时间：失效时间

[root@centos6 ~]# gpasswd -a tom root 
添加tom用户到root组 -d删除
[root@centos6 ~]# id tom  
查看系统中的用户 
[root@centos6 ~]# useradd -G root marry  
创建一个用户marry并加他加入到root组
[root@centos6 ~]# newgrp  marry  
将当前用户临时加入marry组
[root@centos6 桌面]# vim /etc/default/useradd 
这个文件是修改用户创建时的默认参数

[root@centos6 桌面]# useradd  -c "i am jack"  -s /sbin/nologin/  -d /home/jack    -g tom   -G  tom  -u 1000 jack 
创建一个用户jack

[root@centos6 桌面]# passwd jack  用户jack设置密码
[root@centos6 ~]# passwd -d jack  清空密码
[root@centos6 ~]# chage -(参数)   更改用户账户.密码的有效日期


二、用户账户
finger tom  查看用户详细信息
[root@centos6 ~]# finger qb     
查看qb的用户信息  finger yum安装
chfn  tom  修改用户的finger信息
[root@centos6 ~]# chsh -s /sbin/nologin jack
修改用户登录的shell环境
[root@centos6 ~]# groupadd xx
[root@centos6 ~]# groupdel xx
添加组和删除组（不依赖用户）
[root@centos6 ~]# gpasswd -d jack tom 从tom组中删除jack
[root@centos6 ~]# gpasswd -a jack tom  添加jack到tom组
userdel jack          
删除用户（保留文件，不可重新创建）
userdel -r jack
删除用户（彻底删除）
passwd -l tom（-u解锁）
usermod -L tom（-U解锁）
锁住账户

两种批量创建用户的方法：
1、for 循环添加
[root@centos6 ~]# for i in `seq 1 10`
> do
> useradd user$i
> echo "redhat" | passwd --stdin user$i
> done

2、通过文件来添加  /etc/passwd   /etc/shadow
pwconv    
pwunconv 取消shadow加密 
newusers < *.txt 
chpasswd < *.txt
这样操作后用户不存在家环境，从/etc/skel中拷贝所有环境文件到每个用户的家目录

三、密码规则
root  
禁止远程登录   ssh禁止
设置足够强的密码，并且设置定期更改的时限
[root@centos6 ~]# vim /etc/login.defs 
这个文件可以设置密码的规则
[root@centos6 ~]# vim /etc/pam.d/system-auth
这个文件也可以设置用户登录的密码规则
 16 password    sufficient    pam_unix.so sha512 shadow nullok try_firs
    t_pass use_authtok remember=3
remember=3表示修改密码不能重复3次以内
[root@centos7 ~]# vim /etc/security/pwquality.conf 
设置密码的详细规则，针对所有用户
 51 minlen = 8   最小长度
 52 minclass = 1   最小类别，表示密码中最小的字符类别是几个，比如大写字母算一个，小写字母算一个，特殊符号算一个
 53 maxrepeat = 2  密码中允许出现的连续相同的字符最多是2个 
 54 maxclassrepeat = 4   密码中不允许出现连续的字符类别
 55 lcredit = 0   在新密码设置时最少需要包含几个小写字母
 56 ucredit = 0  在新密码设置时最少需要包含几个大写字母
 57 dcredit = 0 
 在新密码设置时最少需要包含几个数字
 58 ocredit = 0
在新密码设置时最少需要包含几个特殊字符
 59 maxsequence = 3
在新密码中不允许连续出现同类的字符3个以上
 60 difok = 8
在新密码设置中不允许和上一个密码的相同字符达到8个
 61 gecoscheck = 3
在新密码中密码的相同字符不能超过gecos信息的3个

[root@centos7 ~]# chmod 700 /usr/bin/su
禁止其他用户使用su

四、FACL
bob（读）  tom（写）  jarry（读写） jack（读x）
xx 
[root@centos6 tmp]# getfacl  xx  查看文件xx的acl规则
[root@centos6 tmp]#  setfacl -m u:bob:rwx xx  针对文件xx为用户bob设置acl，参数m表示修改
注：[root@centos6 tmp]# getfacl xx  查看权限
user:jarry:rwx			#effective:---
如果出现上述内容，那么facl规则没有生效，重新执行setfacl
[root@centos6 tmp]# setfacl -x u:jarry xx
删除用户的facl，参数x就是remove
[root@centos6 tmp]# setfacl -m u:bob:rwx rhce/
针对目录实现facl
[root@centos6 tmp]# setfacl -m d:u:bob:rwx rhce/
不论是谁在rhce目录下创建的文件或者目录，bob都具有默认的权限
[root@centos6 tmp]# setfacl  -x d:u:bob xx
删除的acl，但是默认的规则会保留
[root@centos6 tmp]# setfacl -k rhce/
删除默认的规则

五、sudo
su bob       仍在root环境 当前文件夹
su - bob     切换bob的家环境 进入bob家

visudo或者vim /etc/sudoers  
 99 bob     ALL=(ALL)       ALL
    用户    主机名         命令
 99 bob     ALL=(root)      NOPASSWD: /bin/mount,/bin/umount
表示不输入密码

六、PAM
插入式验证模块 SUN
提供了一个API，用于系统的安全认证方面
pam模块所在位置 /lib64/security
/usr/share/doc/pam-1.1.1/txts  这个目录下存放了所有模块的说明文档
pam_access.so   比如这个模块就是控制用户登录的
[root@centos6 pam.d]# vim /etc/pam.d/sshd
查看这个pam插件的具体格式
       模块类型    	控制标记	调用的模块
模块类型：	   
认证模块auth   认证用户管理的
账户管理account   认证账户执行与访问的控制权限
密码管理password   设置密码、密码强度、更新密码
会话管理sessions 管理连接和断开
控制标记：
required  当带有这个标记的模块只有全部通过验证才表示鉴定完毕。如果有不符合的，模块不会返回信息
include  同时调用其他模块或脚本
sufficient 模块一旦验证成功，PAM立即返回成功标识，不再继续。如果失败，继续
optional 不论成功失败，都继续
requisite 失败即终止，其他跟required一样

/etc/pam.d目录下存放了模块的所有环境文件
		
七、互动
w 查看当前的用户
who 查看当前用户，信息更简单直接
mesq n  关闭通知
mesq y  开启通知
wall “XXXX”  发送广播
write username  tty2  单向联系